module.exports = {
	root: true,
	env: {
		node: true,
	},
	extends: [
		'plugin:import/recommended',
		'plugin:import/typescript',
		'plugin:@typescript-eslint/recommended',
	],
	rules: {
		// Eslint Rules: https://eslint.org/docs/rules/
		// Possible Problems
		'array-callback-return': 'error',
		'constructor-super': 'error',
		'for-direction': 'error',
		'getter-return': 'error',
		'no-async-promise-executor': 'error',
		'no-await-in-loop': 'error',
		'no-class-assign': 'error',
		'no-compare-neg-zero': 'error',
		'no-cond-assign': 'error',
		'no-const-assign': 'error',
		'no-constant-binary-expression': 'error',
		'no-constant-condition': 'error',
		'no-constructor-return': 'error',
		'no-control-regex': 'error',
		'no-debugger': 'off',
		'no-dupe-args': 'error',
		'no-dupe-class-members': 'error',
		'no-dupe-else-if': 'error',
		'no-dupe-keys': 'error',
		'no-duplicate-case': 'error',
		'no-duplicate-imports': 'error',
		'no-empty-character-class': 'error',
		'no-empty-pattern': 'error',
		'no-ex-assign': 'error',
		'no-fallthrough': 'error',
		'no-func-assign': 'error',
		'no-import-assign': 'error',
		'no-inner-declarations': 'error',
		'no-invalid-regexp': 'error',
		'no-irregular-whitespace': 'error',
		'no-loss-of-precision': 'error',
		'no-misleading-character-class': 'error',
		'no-new-native-nonconstructor': 'error',
		'no-new-symbol': 'error',
		'no-obj-calls': 'error',
		'no-promise-executor-return': 'error',
		'no-prototype-builtins': 'error',
		'no-self-assign': 'error',
		'no-self-compare': 'error',
		'no-setter-return': 'error',
		'no-sparse-arrays': 'error',
		'no-template-curly-in-string': 'error',
		'no-this-before-super': 'error',
		'no-undef': 'error',
		'no-unexpected-multiline': 'error',
		'no-unmodified-loop-condition': 'error',
		'no-unreachable': 'error',
		'no-unreachable-loop': 'error',
		'no-unsafe-finally': 'error',
		'no-unsafe-negation': 'error',
		'no-unsafe-optional-chaining': 'error',
		'no-unused-private-class-members': 'error',
		'no-unused-vars': 'error',
		'no-use-before-define': 'error',
		'no-useless-backreference': 'error',
		'require-atomic-updates': 'off',
		'use-isnan': 'error',
		'valid-typeof': 'error',

		// Suggestions
		'accessor-pairs': 'error',
		'arrow-body-style': 'error',
		'block-scoped-var': 'error',
		'camelcase': 'off',
		'capitalized-comments': 'off',
		'class-methods-use-this': 'error',
		'complexity': 'error',
		'consistent-return': 'error',
		'consistent-this': 'error',
		'curly': 'error',
		'default-case': 'error',
		'default-case-last': 'error',
		'default-param-last': 'error',
		'dot-notation': 'error',
		'eqeqeq': 'error',
		'func-name-matching': 'error',
		'func-names': 'error',
		'func-style': 'off',
		'grouped-accessor-pairs': 'error',
		'guard-for-in': 'error',
		'id-denylist': 'error',
		'id-length': 'off',
		'id-match': 'error',
		'init-declarations': 'off',
		'logical-assignment-operators': 'error',
		'max-classes-per-file': 'error',
		'max-depth': 'error',
		'max-lines': 'off',
		'max-lines-per-function': 'error',
		'max-nested-callbacks': 'error',
		'max-params': 'error',
		'max-statements': 'off',
		'multiline-comment-style': 'off',
		'new-cap': 'error',
		'no-alert': 'off',
		'no-array-constructor': 'error',
		'no-bitwise': 'error',
		'no-caller': 'error',
		'no-case-declarations': 'error',
		'no-confusing-arrow': 'error',
		'no-console': 'off',
		'no-continue': 'error',
		'no-delete-var': 'error',
		'no-div-regex': 'error',
		'no-else-return': 'error',
		'no-empty': 'error',
		'no-empty-function': 'error',
		'no-empty-static-block': 'error',
		'no-eq-null': 'error',
		'no-eval': 'error',
		'no-extend-native': 'off',
		'no-extra-bind': 'error',
		'no-extra-boolean-cast': 'error',
		'no-extra-label': 'error',
		'no-extra-semi': 'error',
		'no-floating-decimal': 'error',
		'no-global-assign': 'error',
		'no-implicit-coercion': 'error',
		'no-implicit-globals': 'error',
		'no-implied-eval': 'error',
		'no-inline-comments': 'error',
		'no-invalid-this': 'error',
		'no-iterator': 'error',
		'no-label-var': 'error',
		'no-labels': 'error',
		'no-lone-blocks': 'error',
		'no-lonely-if': 'error',
		'no-loop-func': 'error',
		'no-magic-numbers': 'off',
		'no-mixed-operators': 'error',
		'no-multi-assign': 'error',
		'no-multi-str': 'error',
		'no-negated-condition': 'error',
		'no-nested-ternary': 'error',
		'no-new': 'error',
		'no-new-func': 'error',
		'no-new-object': 'error',
		'no-new-wrappers': 'error',
		'no-nonoctal-decimal-escape': 'error',
		'no-octal': 'error',
		'no-octal-escape': 'error',
		'no-param-reassign': 'error',
		'no-plusplus': 'off',
		'no-proto': 'error',
		'no-redeclare': 'error',
		'no-regex-spaces': 'error',
		'no-restricted-exports': 'error',
		'no-restricted-globals': 'error',
		'no-restricted-imports': 'error',
		'no-restricted-properties': 'error',
		'no-restricted-syntax': 'error',
		'no-return-assign': 'error',
		'no-return-await': 'error',
		'no-script-url': 'error',
		'no-sequences': 'error',
		'no-shadow': 'off',
		'no-shadow-restricted-names': 'error',
		'no-ternary': 'off',
		'no-throw-literal': 'error',
		'no-undef-init': 'error',
		'no-undefined': 'off',
		'no-underscore-dangle': 'error',
		'no-unneeded-ternary': 'error',
		'no-unused-expressions': 'error',
		'no-unused-labels': 'error',
		'no-useless-call': 'error',
		'no-useless-catch': 'error',
		'no-useless-computed-key': 'error',
		'no-useless-concat': 'error',
		'no-useless-constructor': 'error',
		'no-useless-escape': 'error',
		'no-useless-rename': 'error',
		'no-useless-return': 'error',
		'no-var': 'error',
		'no-void': 'error',
		'no-warning-comments': 'warn',
		'no-with': 'error',
		'object-shorthand': 'error',
		'one-var': ['error', 'never'],
		'one-var-declaration-per-line': 'error',
		'operator-assignment': 'error',
		'prefer-arrow-callback': 'error',
		'prefer-const': 'error',
		'prefer-destructuring': 'error',
		'prefer-exponentiation-operator': 'error',
		'prefer-named-capture-group': 'error',
		'prefer-numeric-literals': 'error',
		'prefer-object-has-own': 'error',
		'prefer-object-spread': 'error',
		'prefer-promise-reject-errors': 'error',
		'prefer-regex-literals': 'error',
		'prefer-rest-params': 'error',
		'prefer-spread': 'error',
		'prefer-template': 'error',
		'quote-props': ['error', 'consistent-as-needed'],
		'radix': 'error',
		'require-await': 'error',
		'require-unicode-regexp': 'error',
		'require-yield': 'error',
		'sort-imports': 'off',
		'sort-keys': 'off',
		'sort-vars': 'error',
		'spaced-comment': 'error',
		'strict': 'error',
		'symbol-description': 'error',
		'vars-on-top': 'error',
		'yoda': 'error',

		// Layout & Formatting
		'array-bracket-spacing': 'error',
		'array-element-newline': ['error', 'consistent'],
		'arrow-parens': ['error', 'as-needed'],
		'arrow-spacing': 'error',
		'block-spacing': 'error',
		'brace-style': 'error',
		'comma-dangle': ['error', 'always-multiline'],
		'comma-spacing': 'error',
		'comma-style': 'error',
		'computed-property-spacing': 'error',
		'dot-location': ['error', 'property'],
		'eol-last': 'error',
		'func-call-spacing': 'off',
		'function-call-argument-newline': ['error', 'consistent'],
		'function-paren-newline': 'error',
		'generator-star-spacing': 'error',
		'implicit-arrow-linebreak': 'error',
		'indent': ['error', 'tab'],
		'jsx-quotes': 'error',
		'key-spacing': 'error',
		'keyword-spacing': 'error',
		'line-comment-position': 'error',
		'linebreak-style': 'error',
		'lines-around-comment': 'error',
		'lines-between-class-members': 'error',
		'max-len': 'off',
		'max-statements-per-line': 'error',
		'multiline-ternary': 'off',
		'new-parens': 'error',
		'newline-per-chained-call': 'off',
		'no-extra-parens': 'off',
		'no-mixed-spaces-and-tabs': 'error',
		'no-multi-spaces': 'error',
		'no-multiple-empty-lines': 'error',
		'no-tabs': ['error', { allowIndentationTabs: true }],
		'no-trailing-spaces': 'error',
		'no-whitespace-before-property': 'error',
		'nonblock-statement-body-position': 'error',
		'object-curly-newline': 'error',
		'object-curly-spacing': ['error', 'always', { arraysInObjects: false, objectsInObjects: false }],
		'object-property-newline': ['error', { allowAllPropertiesOnSameLine: true }],
		'operator-linebreak': 'error',
		'padded-blocks': ['error', 'never'],
		'padding-line-between-statements': 'error',
		'quotes': ['error', 'single', { avoidEscape: true }],
		'rest-spread-spacing': 'error',
		'semi': ['error', 'never'],
		'semi-spacing': 'error',
		'semi-style': 'error',
		'space-before-blocks': 'error',
		'space-before-function-paren': ['error', { anonymous: 'always', named: 'never', asyncArrow: 'always' }],
		'space-in-parens': 'error',
		'space-infix-ops': 'error',
		'space-unary-ops': 'error',
		'switch-colon-spacing': 'error',
		'template-curly-spacing': 'error',
		'template-tag-spacing': 'error',
		'unicode-bom': 'error',
		'wrap-iife': 'error',
		'wrap-regex': 'error',
		'yield-star-spacing': 'error',


		// Plugins
		// Simple Import Sort
		'simple-import-sort/imports': 'error',

		// Import
		'import/first': 'error',
		'import/newline-after-import': 'error',
		'import/no-duplicates': 'error',
		'import/no-unresolved': 'off',
	},
	parserOptions: {
		project: ['./tsconfig.json'],
	},
	plugins: [
		'simple-import-sort',
	],
	overrides: [{
		files: ['**/*.ts', '**/*.tsx'],
		extends: [
			'plugin:@typescript-eslint/recommended',
			'plugin:@typescript-eslint/recommended-requiring-type-checking',
		],
		parserOptions: {
			parser: '@typescript-eslint/parser',
		},
		rules: {
			// Disable rules that are extended by TypeScript rules
			'brace-style': 'off',
			'comma-dangle': 'off',
			'comma-spacing': 'off',
			'consistent-return': 'off',
			'default-case': 'off',
			'default-param-last': 'off',
			'dot-notation': 'off',
			'func-call-spacing': 'off',
			'indent': 'off',
			'init-declarations': 'off',
			'keyword-spacing': 'off',
			'lines-between-class-members': 'off',
			'no-array-constructor': 'off',
			'no-dupe-class-members': 'off',
			'no-duplicate-imports': 'off',
			'no-empty-function': 'off',
			'no-extra-parens': 'off',
			'no-extra-semi': 'off',
			'no-implied-eval': 'off',
			'no-invalid-this': 'off',
			'no-loop-func': 'off',
			'no-loss-of-precision': 'off',
			'no-magic-numbers': 'off',
			'no-redeclare': 'off',
			'no-restricted-imports': 'off',
			'no-shadow': 'off',
			'no-throw-literal': 'off',
			'no-undef': 'off',
			'no-unused-expressions': 'off',
			'no-unused-vars': 'off',
			'no-use-before-define': 'off',
			'no-useless-constructor': 'off',
			'object-curly-spacing': 'off',
			'padding-line-between-statements': 'off',
			'quotes': 'off',
			'require-await': 'off',
			'return-await': 'off',
			'semi': 'off',
			'space-before-blocks': 'off',
			'space-before-function-paren': 'off',
			'space-infix-ops': 'off',


			// Typescript Rules: https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/eslint-plugin
			'@typescript-eslint/adjacent-overload-signatures': 'error',
			'@typescript-eslint/array-type': ['error', { default: 'generic' }],
			'@typescript-eslint/await-thenable': 'error',
			'@typescript-eslint/ban-ts-comment': 'error',
			'@typescript-eslint/ban-tslint-comment': 'error',
			'@typescript-eslint/ban-types': 'error',
			'@typescript-eslint/class-literal-property-style': 'error',
			'@typescript-eslint/consistent-generic-constructors': 'error',
			'@typescript-eslint/consistent-indexed-object-style': 'error',
			'@typescript-eslint/consistent-type-assertions': 'error',
			'@typescript-eslint/consistent-type-definitions': 'error',
			'@typescript-eslint/consistent-type-exports': 'error',
			'@typescript-eslint/consistent-type-imports': 'off',
			'@typescript-eslint/explicit-function-return-type': 'off',
			'@typescript-eslint/explicit-member-accessibility': 'error',
			'@typescript-eslint/explicit-module-boundary-types': 'off',
			'@typescript-eslint/member-delimiter-style': ['error', { multiline: { delimiter: 'comma' }, singleline: { delimiter: 'comma' }}],
			'@typescript-eslint/member-ordering': 'error',
			'@typescript-eslint/method-signature-style': 'error',
			'@typescript-eslint/naming-convention': 'off',
			'@typescript-eslint/no-base-to-string': 'error',
			'@typescript-eslint/no-confusing-non-null-assertion': 'error',
			'@typescript-eslint/no-confusing-void-expression': 'error',
			'@typescript-eslint/no-duplicate-enum-values': 'error',
			'@typescript-eslint/no-dynamic-delete': 'error',
			'@typescript-eslint/no-empty-interface': 'error',
			'@typescript-eslint/no-explicit-any': 'error',
			'@typescript-eslint/no-extra-non-null-assertion': 'error',
			'@typescript-eslint/no-extraneous-class': 'error',
			'@typescript-eslint/no-floating-promises': 'off',
			'@typescript-eslint/no-for-in-array': 'error',
			'@typescript-eslint/no-implicit-any-catch': 'off',
			'@typescript-eslint/no-inferrable-types': 'error',
			'@typescript-eslint/no-invalid-void-type': 'error',
			'@typescript-eslint/no-meaningless-void-operator': 'error',
			'@typescript-eslint/no-misused-new': 'error',
			'@typescript-eslint/no-misused-promises': 'error',
			'@typescript-eslint/no-namespace': 'error',
			'@typescript-eslint/no-non-null-asserted-nullish-coalescing': 'error',
			'@typescript-eslint/no-non-null-asserted-optional-chain': 'error',
			'@typescript-eslint/no-non-null-assertion': 'off',
			'@typescript-eslint/no-parameter-properties': 'error',
			'@typescript-eslint/no-redundant-type-constituents': 'error',
			'@typescript-eslint/no-require-imports': 'error',
			'@typescript-eslint/no-this-alias': 'error',
			'@typescript-eslint/no-type-alias': ['error', { allowLiterals: 'always', allowAliases: 'in-unions-and-intersections' }],
			'@typescript-eslint/no-unnecessary-boolean-literal-compare': 'error',
			'@typescript-eslint/no-unnecessary-condition': 'error',
			'@typescript-eslint/no-unnecessary-qualifier': 'error',
			'@typescript-eslint/no-unnecessary-type-arguments': 'error',
			'@typescript-eslint/no-unnecessary-type-assertion': 'error',
			'@typescript-eslint/no-unnecessary-type-constraint': 'error',
			'@typescript-eslint/no-unsafe-argument': 'error',
			'@typescript-eslint/no-unsafe-assignment': 'error',
			'@typescript-eslint/no-unsafe-call': 'error',
			'@typescript-eslint/no-unsafe-declaration-merging': 'error',
			'@typescript-eslint/no-unsafe-member-access': 'off',
			'@typescript-eslint/no-unsafe-return': 'error',
			'@typescript-eslint/no-useless-empty-export': 'error',
			'@typescript-eslint/no-var-requires': 'error',
			'@typescript-eslint/non-nullable-type-assertion-style': 'error',
			'@typescript-eslint/parameter-properties': 'error',
			'@typescript-eslint/prefer-as-const': 'error',
			'@typescript-eslint/prefer-enum-initializers': 'off',
			'@typescript-eslint/prefer-for-of': 'error',
			'@typescript-eslint/prefer-function-type': 'off',
			'@typescript-eslint/prefer-includes': 'error',
			'@typescript-eslint/prefer-literal-enum-member': 'error',
			'@typescript-eslint/prefer-namespace-keyword': 'error',
			'@typescript-eslint/prefer-nullish-coalescing': 'error',
			'@typescript-eslint/prefer-optional-chain': 'error',
			'@typescript-eslint/prefer-readonly': 'error',
			'@typescript-eslint/prefer-readonly-parameter-types': 'off',
			'@typescript-eslint/prefer-reduce-type-parameter': 'error',
			'@typescript-eslint/prefer-regexp-exec': 'error',
			'@typescript-eslint/prefer-return-this-type': 'error',
			'@typescript-eslint/prefer-string-starts-ends-with': 'error',
			'@typescript-eslint/prefer-ts-expect-error': 'error',
			'@typescript-eslint/promise-function-async': 'error',
			'@typescript-eslint/require-array-sort-compare': 'off',
			'@typescript-eslint/restrict-plus-operands': 'error',
			'@typescript-eslint/restrict-template-expressions': 'error',
			'@typescript-eslint/sort-type-union-intersection-members': 'off',
			'@typescript-eslint/strict-boolean-expressions': 'error',
			'@typescript-eslint/switch-exhaustiveness-check': 'error',
			'@typescript-eslint/triple-slash-reference': 'error',
			'@typescript-eslint/type-annotation-spacing': 'error',
			'@typescript-eslint/typedef': 'error',
			'@typescript-eslint/unbound-method': 'error',
			'@typescript-eslint/unified-signatures': 'error',

			// Extension rules
			'@typescript-eslint/brace-style': 'error',
			'@typescript-eslint/comma-dangle': ['error', 'always-multiline'],
			'@typescript-eslint/comma-spacing': 'error',
			'@typescript-eslint/default-param-last': 'error',
			'@typescript-eslint/dot-notation': 'error',
			'@typescript-eslint/func-call-spacing': 'error',
			'@typescript-eslint/indent': ['error', 'tab'],
			'@typescript-eslint/init-declarations': 'error',
			'@typescript-eslint/keyword-spacing': ['error', { after: true, before: true }],
			'@typescript-eslint/lines-between-class-members': 'error',
			'@typescript-eslint/no-array-constructor': 'error',
			'@typescript-eslint/no-dupe-class-members': 'error',
			'@typescript-eslint/no-duplicate-imports': 'error',
			'@typescript-eslint/no-empty-function': ['error', { allow: ['arrowFunctions']}],
			'@typescript-eslint/no-extra-parens': 'off',
			'@typescript-eslint/no-extra-semi': 'error',
			'@typescript-eslint/no-implied-eval': 'error',
			'@typescript-eslint/no-invalid-this': 'error',
			'@typescript-eslint/no-loop-func': 'error',
			'@typescript-eslint/no-loss-of-precision': 'error',
			'@typescript-eslint/no-magic-numbers': 'off',
			'@typescript-eslint/no-redeclare': 'error',
			'@typescript-eslint/no-restricted-imports': 'error',
			'@typescript-eslint/no-shadow': 'off',
			'@typescript-eslint/no-throw-literal': 'error',
			'@typescript-eslint/no-unused-expressions': 'error',
			'@typescript-eslint/no-unused-vars': 'error',
			'@typescript-eslint/no-use-before-define': 'error',
			'@typescript-eslint/no-useless-constructor': 'error',
			'@typescript-eslint/object-curly-spacing': ['error', 'always', { arraysInObjects: false, objectsInObjects: false }],
			'@typescript-eslint/padding-line-between-statements': 'error',
			'@typescript-eslint/quotes': ['error', 'single', { avoidEscape: true }],
			'@typescript-eslint/require-await': 'error',
			'@typescript-eslint/return-await': 'error',
			'@typescript-eslint/semi': ['error', 'never', { beforeStatementContinuationChars: 'never' }],
			'@typescript-eslint/space-before-blocks': 'error',
			'@typescript-eslint/space-before-function-paren': ['error', { anonymous: 'always', named: 'never', asyncArrow: 'always' }],
			'@typescript-eslint/space-infix-ops': 'error',
		},
	}],
}
